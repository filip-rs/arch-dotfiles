# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
#zmodload zsh/zprof

# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.config/zsh/ohmyzsh"

# path to cargo programs
export PATH="$PATH:/home/filip/.cargo/bin"
export BROWSER=librewolf

export GH_CONFIG_DIR="$HOME/.config/gh"
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"
#

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Enable completion
autoload -Uz compinit && compinit -d ~/.config/zsh/.zcompdump



[ -f /usr/share/fzf/key-bindings.zsh ] && source /usr/share/fzf/key-bindings.zsh
[ -f /usr/share/fzf/completion.zsh ] && source /usr/share/fzf/completion.zsh


export HISTSIZE=12000
export SAVEHIST=10000
export HISTFILE=~/.zshhist
export HISTDUP=erase

setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_IGNORE_SPACE
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_FIND_NO_DUPS

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)


# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"


# Machine specific .,m
case "$HOST" in
    arch*)
        alias update="sudo pacman -Syyu && paru && hyprpm update"
        alias refreshmirrors="rate-mirrors arch | sudo tee /etc/pacman.d/mirrorlist"
        alias pkgfnd="pacman -Q | grep"
        alias hyprconf="cd ~/.config/hypr && nvim ~/.config/hypr/hyprland.conf"

        source /usr/share/zsh/plugins/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
        source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
        # source /usr/share/zsh/plugins/zsh-vi-mode/zsh-vi-mode.plugin.zsh
        source /usr/share/zsh/plugins/zsh-autopair/autopair.zsh
        source /usr/share/zsh/plugins/zsh-you-should-use/you-should-use.plugin.zsh


        source /usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
        bindkey '^[[A' history-substring-search-up   # Up arrow
        bindkey '^[[B' history-substring-search-down # Down arrow

        bindkey '^K' history-substring-search-up     # ctrl k
        bindkey '^J' history-substring-search-down   # ctrl j

        # HOST SPECIFIC
        case "$HOST" in
            archbased)
                ;;

            archflipper)
                [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
                source ~/.fzf-git.sh
                ;;
        esac
        ;;


    debian*|i5server)
        alias inst="sudo apt install"
        alias update="sudo apt update && sudo apt upgrade"
        ;;

    *)
        alias update="echo 'no system-specific update command defined'"
        ;;
esac

# Example aliases
alias zshconf="nvim ~/.zshrc +6 && source ~/.zshrc"
# alias ohmyzsh="nvim ~/.config/.oh-my-zsh"

bindkey '^A' beginning-of-line   # Ctrl-A: Move to beginning
bindkey '^E' end-of-line         # Ctrl-E: Move to end

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh
source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme

alias please="sudo"
alias fking="sudo"
alias wifilist="nmcli device wifi list"
alias wificonnect="nmcli device wifi connect --ask"
# alias performance="sudo cpupower frequency-set -g performance"
# alias powersave="sudo cpupower frequency-set -g powersave"
# alias wifix="rfkill unblock wlan"
alias c="clear"
alias nfch="neofetch"
alias lss="eza --tree --icons --level=2"
alias lsss="eza --tree --icons --level=3"
alias lssss="eza --tree --icons --level=4"
alias ls="eza --icons"
alias la="eza --long --header --icons --git --all --group-directories-first --sort=type"
alias py="python"
alias serialfix="sudo chmod +766 /dev/ttyACM0"
alias cpufetch="cpufetch --style fancy --color 230,50,45:240,230,230:0,0,0:250,70,65:170,170,170"
alias fetch="fastfetch"
alias desktopentry="/usr/share/applications/"
alias nvide='nohup neovide & disown'
alias pyvenv="chmod +x .venv/bin/activate && source .venv/bin/activate"
alias mkvenv="py -m venv .venv && chmod +x .venv/bin/activate && source .venv/bin/activate"
alias desktopentry="cd /usr/share/applications/"
alias bt="sudo systemctl start bluetooth"
alias btui="bluetuith"
alias webpconvert="for file in *.webp; dwebp $file -o ${file/%.webp/.png} && rm $file"
alias heicconvert="for file in *.heic; do heif-convert $file ${file/%.heic/.png}; done"
alias gpt="chatgpt.sh -cc"
alias qrc="qrencode -t UTF8"
alias mccmd="mcrcon -H 129.241.208.10 -P 25575 -p "
alias systat="sudo systemctl status"
alias systart="sudo systemctl restart"
alias stow="stow . --dotfiles -t $HOME"
alias fnd="ls -a | grep -i"

#alias powersave="sudo echo "2000000" > /sys/devices/system/cpu/cpu*/cpufreq/scaling_max_freq"
#alias performance="sudo echo "3201000" > /sys/devices/system/cpu/cpu*/cpufreq/scaling_max_freq"

eval $(thefuck --alias)
alias fk="fuck"


export PATH="$HOME/.local/bin:$PATH"
export XDG_DATA_DIRS="/var/lib/flatpak/exports/share:/usr/local/share:/usr/share"
export EDITOR="nvim"

# configure and init zoxide
eval "$(zoxide init zsh)"
alias cd="z"

[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.

# Davinci converter
conv() {
    if [ -z "$1" ]; then
        echo "Usage: conv inputfile [outputfile]"
        return 1
    fi

    input="$1"
    if [ -n "$2" ]; then
        output="$2"
    else
        base="${input%.*}"
        output="${base}.mov"
    fi

    ffmpeg -i "$input" -c:v prores_ks -profile:v 3 -c:a pcm_s16le "$output"
}


# TMUX session system
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
  if tmux ls 2>/dev/null | grep -vq 'no server running'; then
    exec tmux a
  else
    exec tmux
  fi
fi
